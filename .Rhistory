ggtitle("US Gun Murders in US 2010") +
scale_color_discrete(name = "Region") +
theme_economist()
p <- heights |> filter(sex == "Male")
library(heights)
library("heights")
data("heights")
View(heights)
p <- heights |> filter(sex == "Male")
<- heights |> filter(sex == "Male")
p <- heights |> filter(sex == "Male")
p <- p |> ggplot(aes(x = height))
p <- heights |> filter(sex== "Male")
p <- heights |> filter(sex == "Male")
p <- p |> ggplot(aes(x = height))
p + geom_density(fill="blue")
p <- heights |> filter(sex == "Male") |>
ggplot(aes(sample = height))
data("heights")
p <- heights |> filter(sex == "Male")
p + geom_density(fill="blue")
ata(heights)
ata(heights)
data(heights)
data(height)
p <- heights |> filter(sex == "Male") |>
ggplot(aes(sample = height))
library(ggplot)
library("ggplot2")
p <- heights |> filter(sex == "Male") |>
ggplot(aes(sample = height))
ibrary(dslabs)
library(dslabs)
data("murders")
data("heights")
p <- heights |> filter(sex == "Male") |>
ggplot(aes(sample = height))
library(dplyr)
library(ggplot2)
p <- heights %>%
filter(sex == "Male") %>%
ggplot(aes(sample = height)) +
stat_qq() +
stat_qq_line()
p + geom_qq()
p <- heights %>%
filter(sex == "Male") %>%
p <- p |> ggplot(aes(x = height))
p <- heights %>%
filter(sex == "Male") %>%
ggplot(aes(x = height)) +
geom_histogram(binwidth = 2, color = "black", fill = "blue")
p + geom_density(fill="blue")
p + geom_histogram(binwidth = 1)
p + geom_histogram(binwidth = 1, fill =
"blue", col = "black") + xlab("Male heights
in inches") + ggtitle("Histogram")
p + geom_density(fill="blue")
params <- heights %>% filter(sex == "Male") %>%
summarize(mean = mean(height), sd = sd(height))
params
p + geom_qq(dparams = params)
p + geom_qq(dparams = params) + geom_abline()
p + geom_qq(dparams = params) + geom_abline()
p <- heights %>%
filter(sex == "Male")
params <- list(mean = mean(p$height, na.rm = TRUE), sd = sd(p$height, na.rm = TRUE))
p %>%
ggplot(aes(sample = height)) +
geom_qq(dparams = params) +
geom_abline() +
labs(title = "Q-Q Plot of Male Heights", x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme_minimal()
heights %>% filter(sex == "Male") %>%
ggplot(aes(sample = scale(height))) + geom_qq()
+ geom_abline()
library(gridExtra)
install.packages(gridExtra)
install.packages("gridExtra")
library(gridExtra)
p <- heights %>% filter(sex == "Male") %>% ggplot(aes(x
= height))
p1 <- p + geom_histogram(binwidth = 1, fill = "blue",
col = "black")
p2 <- p + geom_histogram(binwidth = 2, fill = "blue",
col = "black")
p3 <- p + geom_histogram(binwidth = 3, fill = "blue",
col = "black")
grid.arrange(p1, p2, p3, ncol = 3)
s <- heights %>% filter(sex == "Male") %>% summarize(average = mean(height), standard_deviation
= sd(height))
s
s$average
heights %>%
filter(sex == "Male") %>%
summarize(median = median(height), minimum = min(height), maximum = max(height))
heights %>% filter(sex == "Male") %>% reframe(range = quantile(height, c(0, 0.5, 1)))
data("murders")
us_murder_rate <- murders %>% summarize(rate = sum(total) /
sum(population)*100000)
us_murder_rate
class(us_murder_rate)
data("murders")
us_murder_rate <- murders %>% summarize(rate = sum(total) / sum(population)*100000)
us_murder_rate |> pull(rate)
us_murder_rate |> pull()
us_murder_rate <- murders |> summarize(rate = sum(total) / sum(population)*100000) |>
pull(rate)
us_murder_rate
heights %>% group_by(sex)
heights %>% group_by(sex) %>% summarize(average = mean(height), standard_deviation =
sd(height))
murders <- murders %>% mutate(murder_rate = total / population*100000)
murders %>% group_by(region) %>% summarize(median_rate = median(murder_rate))
murders %>% arrange(population) %>% head()
murders %>% arrange(murder_rate) %>% head()
murders %>% arrange(desc(murder_rate)) %>% head()
murders %>% arrange(region, murder_rate) %>% head()
murders %>% top_n(10, murder_rate)
murders %>% arrange(desc(murder_rate)) %>% top_n(10)
install.packages("tidyverse")
library(tidyverse)
library(dslabs)
library(ggthemes)
library(ggrepel)
install.packages("tidyverse")
library(tidyverse)
r <- murders |> summarize(rate = sum(total) / sum(population) * 10^6) |> pull(rate)
murders |> ggplot(aes(population/10^6, total, label = abb)) +
geom_point(aes(col = region), size = 3) +
geom_text_repel() +
scale_x_log10() +
scale_y_log10() +
xlab("Populations in millions (log scale)") +
ylab("Total number of murders (log scale)") +
ggtitle("US Gun Murders in US 2010") +
scale_color_discrete(name = "Region") +
geom_abline(intercept = log10(r), lty = 2, color = "darkgrey") +
theme_economist()
p <- heights |> filter(sex == "Male")
p <- p |> ggplot(aes(x = height))
p + geom_histogram()
p + geom_histogram(binwidth = 1)
p + geom_density(fill="blue")
p + geom_histogram(binwidth = 1, fill =
"blue", col = "black") + xlab("Male heights
in inches") + ggtitle("Histogram")
males_df <- heights |> filter(sex == "Male")
females_df <- heights |> filter(sex == "Female")
murders_with_murder_rate <- murders |> mutate(murder_rate = total / population*100000)
View(murders_with_murder_rate)
s <- heights |> filter(sex == "Male") |> summarize(average = mean(height), standard_deviation =
sd(height))
s
s$standard_deviation
heights %>%
filter(sex == "Male") %>%
summarize(median = median(height), minimum = min(height), maximum = max(height))
us_murder_rate <- murders |> summarize(rate = sum(total) / sum(population)*100000) |> pull(rate)
us_murder_rate
class(us_murder_rate)
murders |> summarize(rate = sum(total) / sum(population)*100000) %>% .$rate
heights %>% group_by(sex)
heights |> group_by(sex) |> summarize(average = mean(height), standard_deviation = sd(height))
murders <- murders |> mutate(murder_rate = total / population*100000)
murders |> group_by(region) |> summarize(median_rate = median(murder_rate))
murders |> arrange(population) |> head()
murders |> arrange(desc(murder_rate)) |> head()
murders |> slice_max(order_by = murder_rate, n=10)
data(gapminder)
head(gapminder)
gapminder |> filter(year == 2015 & country %in% c("Sri Lanka", "Turkey"))|>
select(country, infant_mortality)
gapminder |> filter(year == 1962) |> ggplot(aes(x=fertility, y=life_expectancy)) +
geom_point()
gapminder |> filter(year == 1962) |> ggplot(aes(x=fertility, y=life_expectancy, color =
continent)) + geom_point()
gapminder |> filter(year %in% c(1962,
2012)) |> ggplot(aes(x=fertility,
y=life_expectancy, color = continent))
gapminder |> filter(year %in% c(1962, 2012)) |>
ggplot(aes(x=fertility,y=life_expectancy, color = continent))+ geom_point()
+ facet_grid(continent ~ year)
gapminder %>% filter(year %in%
c(1962, 2012)) %>%ggplot(aes(fertility,
life_expectancy, color = continent)) + geom_point() + facet_grid(.~year)
gapminder |> filter(year %in% c(1962,
2012)) |> ggplot(aes(x=fertility,
y=life_expectancy, color = continent))
+ geom_point() + facet_grid(continent ~
year)
gapminder |> filter(year %in% c(1962,
2012)) |> ggplot(aes(x=fertility,
y=life_expectancy, color = continent))+ geom_point() + facet_grid(continent ~ year)
gapminder %>% filter(year %in%
c(1962, 2012)) %>%ggplot(aes(fertility,
life_expectancy, color = continent)) + geom_point() + facet_grid(.~year)
gapminder |> filter(year %in% c(1962, 1970,
1980, 1990, 2000, 2012)) |>
ggplot(aes(fertility, life_expectancy, color =
continent)) + geom_point() + facet_wrap(~year)
gapminder %>% filter(year %in%
c(1962, 2012)) %>%ggplot(aes(fertility,
life_expectancy, color = continent)) + geom_point() + facet_grid(.~year)
gapminder |> filter(year %in% c(1962, 1970,
1980, 1990, 2000, 2012)) |>
ggplot(aes(fertility, life_expectancy, color =
continent)) + geom_point() + facet_wrap(~year)
gapminder %>% filter(country == "United States") %>%
ggplot(aes(x=year, y=fertility)) + geom_line()
countries <- c("South Korea", "Germany")
gapminder |> filter(country %in% countries) |> ggplot(aes(x= year,
y= fertility, color = country)) + geom_line()
countries <- c("South Korea", "Germany")
gapminder |> filter(country %in% countries) |> ggplot(aes(x= year,
y= life_expectancy, color = country)) +geom_line()
gapminder <- gapminder |> mutate(dollars_per_day = gdp/population/365)
length(levels(gapminder$region))
gapminder <- gapminder |> mutate(dollars_per_day = gdp/population/365)
past_year = 1970
p <- gapminder |> filter(year == past_year & !is.na(gdp)) |> ggplot(aes(region,
dollars_per_day))
p + geom_boxplot()
past_year = 1970
p <- gapminder |> filter(year == past_year & !is.na(gdp)) |> ggplot(aes(region,
dollars_per_day))
p + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
past_year = 1970
p <- gapminder |> filter(year == past_year & !is.na(gdp)) |> ggplot(aes(region,
dollars_per_day))
p + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, hjust = 0.5))
past_year = 1970
p <- gapminder |> filter(year == past_year & !is.na(gdp)) |> ggplot(aes(region,
dollars_per_day))
p + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, hjust = 0))
past_year = 1970
p <- gapminder |> filter(year == past_year & !is.na(gdp)) |> ggplot(aes(region,
dollars_per_day))
p + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
past_year = 1970
p <- gapminder |> filter(year ==
past_year & !is.na(gdp)) |>
mutate(region = reorder(region,
dollars_per_day, FUN = median)) %>%
ggplot(aes(region, dollars_per_day,
fill = continent)) + geom_boxplot() +
theme(axis.text.x = element_text(angle
= 90, hjust = 1)) + xlab("")
p
p + scale_y_continuous(trans = "log2")
p + scale_y_continuous(trans = "log2") + geom_point(show.legend = FALSE)
country_list_1 <- gapminder |> filter(year == 1970 & !is.na(dollars_per_day))|> pull(country)
country_list_2 <- gapminder |> filter(year == 2010 & !is.na(dollars_per_day))|> pull(country)
country_list <- intersect(country_list_1, country_list_2)
p <- gapminder |> filter(year %in% c(1970, 2010) &
country %in% country_list) |> mutate(region =
reorder(region, dollars_per_day, FUN = median)) |>
ggplot() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab(" ") + scale_y_continuous(trans = "log2")
p + geom_boxplot(aes(region, dollars_per_day, fill
= continent)) + facet_grid(year~.)
p <- gapminder %>% filter(year %in% c(1970, 2010) & country %in% country_list)%>%
mutate(region = reorder(region,
dollars_per_day, FUN = median)) %>% ggplot()+ theme(axis.text.x = element_text(angle =
90, hjust = 1)) + xlab(" ") +scale_y_continuous(trans = "log2")
p + geom_boxplot(aes(region, dollars_per_day,
fill = factor(year)))
library(dslabs)
library(tidyverse)
data(heights)
heights |> ggplot(aes(sex, height)) + geom_point() + theme_bw()
heights %>% ggplot(aes(sex, height)) + geom_jitter(aes(color = sex), alpha = 0.3)
+ theme_bw()
heights |> ggplot(aes(height))
+ geom_histogram(colour = "black") + facet_grid(.~  sex)
heights |> ggplot(aes(height))
+ geom_histogram(colour = "black") + facet_grid(.~  sex)
heights |> ggplot(aes(height))
+ geom_histogram(colour =
"black") + facet_grid(.~
sex)
heights |> ggplot(aes(height))+ geom_histogram(colour =
"black") + facet_grid(.~
sex)
heights |> ggplot(aes(height)) + geom_histogram(colour = "black") + facet_grid(sex
~.)
library(readr)
getwd()
url <-
"https://raw.githubusercontent.com/rafalab/dslabs/master/inst/e
xtdata/murders.csv"
dat <- read_csv(url)
download.file(url, "murders.csv")
tmp_filename <- tempfile()
download.file(url, tmp_filename)
data(murders)
head(murders)
results_us_election_2016
murders
identical(results_us_election_2016$state, murders$state)
help("left_join")
tab <- left_join(murders,
results_us_election_2016, by =
"state")
help("left_join")
help("left_join")
tab <- left_join(murders,results_us_election_2016, by ="state")
library(ggrepel)
tab |> ggplot(aes(population/10^6,
electoral_votes, label = abb)) +
geom_point() + geom_text_repel() +
scale_x_continuous(trans = "log2") +
scale_y_continuous(trans = "log2") +
geom_smooth(method = "lm", se = FALSE)
library(dslabs)
library("dslabs")
system.file("extdata", package = "dslabs")
library(readr)
library(readxl)
url <-
"https://raw.githubusercontent.com/rafalab/dslabs/master/inst/e
xtdata/murders.csv"
dat <- read_csv(url)
download.file(url, "murders.csv")
tmp_filename <- tempfile()
download.file(url, tmp_filename)
data("gapminder")
tidy_data <- gapminder |> filter(country %in% c("South Korea",
"Germany")) |> select(country, year, fertility)
head(tidy_data)
library("gapminder")
data("gapminder")
tidy_data <- gapminder |> filter(country %in% c("South Korea","Germany")) |> select(country, year, fertility)
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
data("gapminder")
tidy_data <- gapminder |> filter(country %in% c("South Korea","Germany")) |> select(country, year, fertility)
head(tidy_data)
tidy_data |> ggplot(aes(year, fertility, color = country)) + geom_point()
head(tidy_data)
tidy_data |> ggplot(aes(year, fertility, color = country)) + geom_point()
library("ggplot2")
tidy_data |> ggplot(aes(year, fertility, color = country)) + geom_point()
path<- system.file("extdata"
, package="dslabs")
filename<- file.path(path, "fertility-two-countries-example.csv")
wide_data<- read_csv(filename)
wide_data |> select(country, '1960':'1967')
help(“pivot_longer")
help(pivot_longer)
??pivot_longer
new_tidy_data <- wide_data |> pivot_longer("1960":"2015"
, names_to =
“year”, values_to = “fertility”)
new_tidy_data <- wide_data |> pivot_longer("1960":"2015", names_to =“year”, values_to = “fertility”)
new_tidy_data <- wide_data |>
pivot_longer(cols = "1960":"2015", names_to = "year", values_to = "value")
install.packages("tidyr")
library("tidyr")
library(tidyr)
new_tidy_data <- wide_data |>
pivot_longer(cols = "1960":"2015", names_to = "year", values_to = "value")
View(new_tidy_data)
class(tidy_data$year)
class(new_tidy_data$year)
new_tidy_data <- wide_data |> pivot_longer(country, names_to = "year”,values_to = “fertility”) |> mutate(year = as.integer(year))
head(new_tidy_data)
new_tidy_data <- wide_data |> pivot_longer(country, names_to = "year”,values_to = “fertility”) |> mutate(year = as.integer(year))
new_tidy_data <- wide_data |>
pivot_longer(country, names_to = "year”,values_to = “fertility”) |> mutate(year = as.integer(year))
head(new_tidy_data)
new_wide_data <- new_tidy_data |> spread(names_from = year, values_from =
fertility)
select(new_wide_data, country, '1960':'1967')
View(wide_data)
View(tidy_data)
View(no_nas_data)
View(new_tidy_data)
View(new_tidy_data)
select(new_wide_data, country, '1960':'1967')
path <- system.file("extdata"
library(dplyr)
dat <- raw_dat |> pivot_longer(-country)
dat |> separate_wider_delim(name, delim = "_", names =
c("year","name"), too_many = “merge")
dat |> separate_wider_delim(name, delim = "_",names = c("year", "name"), too_many = "merge")
dat |> pivot_wider()
data(murders)
head(murders)
results_us_election_2016
murders
identical(results_us_election_2016$state, murders$state)
tab <- left_join(murders,
results_us_election_2016, by =
"state")
head(tab)
library(ggrepel)
tab |> ggplot(aes(population/10^6,
electoral_votes, label = abb)) +
geom_point() + geom_text_repel() +
scale_x_continuous(trans = "log2") +
scale_y_continuous(trans = "log2") +
geom_smooth(method = "lm", se = FALSE)
results_us_election_2016 <- results_us_election_2016 |>
arrange(state)
tab1 <- slice(murders, 1:6) |> select(state, population)
tab1
tab2 <- slice(results_us_election_2016, c(1:3, 5, 7:8)) |>
select(state, electoral_votes)
tab2
left_join(tab1, tab2)
right_join(tab1, tab2)
inner_join(tab1, tab2)
full_join(tab1, tab2)
semi_join(tab1, tab2)
anti_join(tab1, tab2)
bind_cols(a = 1:3, b = 4:6)
cbind(a = 1:3, b = 4:6)
tab1 <- tab[, 1:3]
tab2 <- tab[, 4:6]
tab3 <- tab[, 7:9]
new_tab <-bind_cols(tab1, tab2,tab3)
head(new_tab)
tab1 <- tab[1:2, ]
tab2 <- tab[3:4, ]
bind_rows(tab1, tab2)
rbind(tab1, tab2)
tab1 <- tab[1:5, ]
tab2 <- tab[3:7, ]
intersect(tab1, tab2)
tab1 <- tab[1:5, ]
tab2 <- tab[3:7, ]
union(tab1, tab2)
tab1 <- tab[1:5, ]
tab2 <- tab[3:7, ]
setdiff(tab1, tab2)
v1 <- c(1:5)
v2 <- c(5:1)
v3 <- c(1:6)
setequal(v1, v2)
setequal(v1, v3)
install.packages("rwest")
install.packages("rvest")
library(rvest)
url <-
"https://en.wikipedia.org/w/index.php?title=Gun_violence_in_the_United_Stat
es_by_state&direction=prev&oldid=810166167"
data_html <- read_html(url)
url <-
"https://en.wikipedia.org/w/index.php?title=Gun_violence_in_the_United_Stat
es_by_state&direction=prev&oldid=810166167"
data_html <- read_html(url)
tab <- data_html |> html_nodes("table")
install.packages("jsonlite")
library(jsonlite)
library(dplyr)
nobel <- fromJSON("http://api.nobelprize.org/v1/prize.json")
nobel <- fromJSON("https://api.nobelprize.org/v1/prize.json")
nobel$prizes |> select(category)
nobel$prizes |> select(year)
nobel$prizes |> filter(category == "literature" & year == "1971") |>
pull(laureates) |> first() |> select(id, firstname, surname)
install.packages("httr2")
ibrary(httr2)
library(httr2)
library(httr2)
library(readr)
library(readr)
library(jsonlite)
url <- "https://data.cdc.gov/resource/r8kw-7aab.json"
response <- request(url) |> req_perform()
tab <- response |> resp_body_string() |> fromJSON(flatten=TRUE)
response <- request(url) |> req_url_path_append("?$limit=100000") |> req_perform()
tab <- response |> resp_body_string() |> fromJSON(flatten = TRUE)
install.packages("readxl")
library(readxl)
path<-"D:\indirilenler2\yedek\izbb-kaza-ariza-verileri (2).xlsx"
head(data)
getwd()
path<-"D:\EMU430\emu430-fall2024-yazelsahinlab\izbb-kaza-ariza-verileri (2).xlsx"
path<-"D:\\EMU430\\emu430-fall2024-yazelsahinlab\izbb-kaza-ariza-verileri (2).xlsx"
path<-"D:\\EMU430\\emu430-fall2024-yazelsahinlab\izbb-kaza-ariza-verileri (2).xlsx"
path<-"D:/EMU430/emu430-fall2024-yazelsahinlab/izbb-kaza-ariza-verileri (2).xlsx"
data<-read_excel(path,sheet=1)
head(data)
path<-"D:/EMU430/emu430-fall2024-yazelsahinlab/izbb-kaza-ariza-verileri (2).xlsx"
data<-read_excel(path,sheet=1)
data
filter(data,istikamet=="Havalimanı")
View(data)
library(dplyr)
izmir_veri<-data %>%
filter(istikamet=="Havalimanı")
izmir_veri<-data %>%
filter(ISTIKAMET=="Havalimanı")
izmir_veri
View(izmir_veri)
install.packages("lubridate")
library(lubridate)
data <- data %>% mutate(yıl = year(TARIH))
View(data)
data_2 <- data %>% mutate(yıl = year(TARIH))
data_2 <- data %>% mutate(yıl = year("TARIH"))
data_1 <- data %>% mutate(TARIH = as.Date(TARIH, format = "%Y-%m-%d"))
data_2 <- data_1 %>% mutate(yıl = year("TARIH"))
data_2 <- data_1 %>% mutate(yıl = year(TARIH))
data_1 <- data_1 %>% mutate(yıl = year(TARIH))
View(data_1)
data_2 <- data_1 %>% mutate(yıl = year(TARIH))
data_1 <- data %>% mutate(TARIH = as.Date(TARIH, format = "%Y-%m-%d"))
data_2 <- data_1 %>% mutate(yıl = year(TARIH))
